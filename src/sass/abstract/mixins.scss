/// @name add all fonts
/// @author Stevan Stojanovic
/// @param $font-names {string/string's} provide the list of font names/or single font name

@mixin add-all-fonts(
  $map: $fcm-map-of-fonts,
	$path: $fcm-font-path) {
  @if ($map != null) {
    @each $font-type, $font-name in $map {
      @font-face {
        font-family: $font-type;
        font-style: normal;
        font-weight: normal;
        src: url('#{$path}' + '#{$font-name}');
      }
    }
  } @else {
    @warn "'#{$map}' should be placed as argument";
  }
}

/// @name generate-icon-by-size
/// @author Stevan Stojanovic
/// @param $map {map} of icons stored by theirs size
/// @param $unit {string} unit used for determining size of the icon wrapper

@mixin generate-icon-by-size(
  $map: $fcm-list-of-custom-icon-names,
  $unit: 'rem') {
  $map-keys: map-keys($map);
  
  @each $key in $map-keys {
    
    @each $sub-key in map-deep-get($map, $key) {
      
      .#{$sub-key}-icon {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        width: unquote($key) + unquote($unit);
        height: unquote($key) + unquote($unit);
        position: relative;
        cursor: pointer;
        
        &::before {
          background-position: center;
          background-size: contain;
          content: '';
          height: unquote($key) + unquote($unit);
          width: unquote($key) + unquote($unit);
          background-image: url($fcm-img-path + $sub-key + ".svg");
        }
      }
    }
  }
}

/// @name class name same as team member name
/// @author Stevan Stojanovic
/// @param $class-list {list} of team players stored in var.scss

@mixin class-name-same-as-background-image-name(
  $member-list: $fcm-list-of-players) {
  
  $header-img-path: $fcm-img-path + 'players/details/header/';
  $body-img-path: $fcm-img-path + 'players/details/body/';
  $sufix: '.png';
  
  @for $i from 1 through length($member-list) {
    $list-of-classes: nth($member-list, $i);
    
    @each $class in $list-of-classes {
      
      .#{$prefix}profile-header-player-img {
        
        &.#{$class} {
          background-image: url($header-img-path + 'details-header-' + $class + $sufix);
        }
      }
      
      .#{$prefix}profile-body-player-img {
        
        &.#{$class} {
          background-image: url($body-img-path + 'details-body-' + $class + $sufix);
        }
      }
    }
  }
}

/// @name class name same as flag name
/// @author Stevan Stojanovic
/// @param $class-list {list} of flags stored in var.scss

@mixin class-name-same-as-flag-name(
  $flag-list: $fcm-list-of-flags) {
  
  $flag-path: $fcm-img-path + 'flags/';
  $sufix: '.svg';
  
  @for $i from 1 through length($flag-list) {
    $list-of-classes: nth($flag-list, $i);
    
    @each $class in $list-of-classes {
      .#{$class}-flag {
        background-image: url($flag-path + $class + $sufix);
      }
    }
  }
}

/// @name sponsors-css-generator
/// @author Stevan Stojanovic
/// @param $class-list {list} list of sponsors sinqle quoted without comma stored in var.scss
/// Basicly this is custom component for sponsors bar and sponsor icons bar

@mixin sponsors-css-generator(
  $sponsors-list: $fcm-list-of-sponsors,
  $default-sponsor-width: 10rem,
  $default-sponsor-width-sm: 7rem,
  $default-sponsor-width-xs: 4rem,
  $default-sponsor-height: 6rem,
  $sponsors-footer-border-color: $secondary,
  $default-sponsors-bar-padding: 2rem,
  $default-sponsor-spacing-right: 5rem,
  $sponsors-img-sufix: '.png',
  $footer-sponsor-spacing-right: 2rem,
  $profile-sponsor-spacing-right: 5rem,
  $profile-sponsor-spacing-right-xs: 3rem,
  $sponsors-profile-border-top-color: #e9e9e9
) {
  
  .#{$prefix}sponsors-bar {
    padding: $default-sponsors-bar-padding;
    position: relative;
    display: flex;
    
    &.#{$prefix}footer-sponsors {
      
      &::before {
        content: '';
        width: 100%;
        height: 2px;
        background-color: $secondary;
        position: absolute;
        left: 0;
        bottom: 0;
      }
      
      .#{$prefix}sponsor {
        
        &:not(:last-of-type) {
          margin-right: $footer-sponsor-spacing-right;
        }
      }
    }
    
    &.#{$prefix}profile-body-sponsors {
      border-top: 1px solid $sponsors-profile-border-top-color;
      
      .#{$prefix}sponsor {
        
        &:not(:last-of-type) {
          margin-right: $profile-sponsor-spacing-right;
          
          @include media-breakpoint-down(xs) {
            margin-right: $profile-sponsor-spacing-right-xs;
          }
        }
      }
    }
    
    .#{$prefix}sponsors-bar-holder {
      display: flex;
      justify-content: center;
      flex: 1;
    }
    
    .#{$prefix}sponsor {
      background-position: center;
      background-repeat: no-repeat;
      background-size: contain;
      width: $default-sponsor-width;
      height: $default-sponsor-height;
      
      &:not(:last-of-type) {
        margin-right: $default-sponsor-spacing-right;
      }
      
      @include media-breakpoint-down(sm) {
        width: $default-sponsor-width-sm;
      }
      
      @include media-breakpoint-down(xs) {
        width: $default-sponsor-width-xs;
      }
      
      @for $i from 1 through length($sponsors-list) {
        
        $list-of-classes: nth($sponsors-list, $i);
        
        @each $class in $list-of-classes {
          
          &.#{$class} {
            background-image: url($fcm-img-path + $class + $sponsors-img-sufix);
          }
        }
      }
    }
  }
  
  @content;
}

/// @name social-bar-css-generator
/// @author Stevan Stojanovic
/// @param $social-platforms {list} list of social platforms icon reference without comma single quoted of flags stored in var.scss
/// Basicly this is custom component for social bar and social icons

@mixin social-bar-css-generator(
  $social-platforms: $fcm-social-platform-list,
  $social-platform-icon-sufix: '.svg',
  $social-icon-size: 2.4rem,
  $social-icon-spacing-right: 1rem,
  $social-icon-opacity: .7,
  $social-icon-opacity-hover: 1,
  $social-bar-title-color: $white,
  $social-bar-title-font-family: $fcm-font-family-gothic,
  $social-bar-max-width: 12.6rem
) {
  
  .#{$prefix}social-bar {
    display: flex;
    max-width: $social-bar-max-width;
    flex-direction: column;
  
    .#{$prefix}social-bar-title {
      color: $social-bar-title-color;
      text-transform: uppercase;
      font-family: $social-bar-title-font-family;
    }

    .#{$prefix}social-bar-body {
      display: flex;
    }
    
    .#{$prefix}social-bar-icon {
      background-position: center;
      background-repeat: no-repeat;
      background-size: contain;
      cursor: pointer;
      height: $social-icon-size;
      transition: opacity unquote($fcm-transition-duration) unquote($fcm-transition-animation);
      opacity: $social-icon-opacity;
      width: $social-icon-size;
      
      &:not(:last-of-type) {
        margin-right: $social-icon-spacing-right;
      }
      
      &:hover {
        opacity: $social-icon-opacity-hover;
      }
      
      @for $i from 1 through length($social-platforms) {
        
        $list-of-classes: nth($social-platforms, $i);
        
        @each $class in $list-of-classes {
          
          &.#{$class} {
            background-image: url($fcm-img-path + $class + $social-platform-icon-sufix);
          }
        }
      }
    }
  }
  
  @content;
}
