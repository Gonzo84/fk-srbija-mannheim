/// @name add all fonts
///
/// @author Stevan Stojanovic
///
/// @param $font-names {string/string's} provide the list of font names/or single font name

@mixin add-all-fonts(
    $map: $fcm-map-of-fonts,
	  $path: $fcm-font-path) {
        @if ($map != null) {
            @each $font-type, $font-name in $map {
                @font-face {
                    font-family: $font-type;
                    font-style: normal;
                    font-weight: normal;
                    src: url('#{$path}' + '#{$font-name}');
                }
            }
        } @else  {
              @warn "'#{$map}' should be placed as argument";
          }
}

/// @name generate-icon-by-size
///
/// @author Stevan Stojanovic
///
/// @param $map {map} of icons stored by theirs size
/// @param $unit {string} unit used for determining size of the icon wrapper

@mixin generate-icon-by-size($map: $fcm-list-of-custom-icon-names, $unit: 'rem') {
    $map-keys: map-keys($map);
  
    @each $key in $map-keys {
    
        @each $sub-key in map-deep-get($map, $key) {
          
            .#{$sub-key}-icon {
                display: inline-flex;
                justify-content: center;
                align-items: center;
                width: unquote($key) + unquote($unit);
                height: unquote($key) + unquote($unit);
                position: relative;
                cursor: pointer;
  
                &::before {
                    background-position: center;
                    background-size: contain;
                    content: '';
                    height: unquote($key) + unquote($unit);
                    width: unquote($key) + unquote($unit);
                    background-image: url($fcm-img-path + $sub-key + ".svg");
                }
            }
        }
    }
}

//TODO make mixin for this and all players
.fcm-profile-details-header {
  
  &.mbappe {
    background-image: url('#{$fcm-img-path}players/details/header/mbappe.png');
  }
}
